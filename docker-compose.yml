version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CACHE_URL=redis://redis:6379/0
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - .:/app

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app worker --loglevel=info
    environment:
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CACHE_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - .:/app

  celerybeat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CACHE_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - .:/app

  db:
    image: postgres:14.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  rabbitmq:
    image: "rabbitmq:alpine"

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  postgres_data:
  redis_data:
